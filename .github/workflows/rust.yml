name: CI

on:
  push:

env:
  CARGO_TERM_COLOR: always
  BUILD_CONTAINER_NAME: integritee_worker_enclave_test

jobs:
  ##########################################################################
  ##########################################################################
  cargo_test:
    runs-on: ubuntu-latest

    steps:
      - uses: Interstellar-Network/gh-actions/prepare@v3-dev
        with:
          ssh_key_input: ${{ secrets.SSH_KEY_MACHINE_USER_INTERSTELLAR_CI }}
          install_cmake_and_ninja: false
          install_ccache: true
          install_conan: false

      - uses: Interstellar-Network/gh-actions/prepare_rust@v3-dev
        with:
          use_toolchain_toml: "true"
          toolchain_components: ""

      ##########################################################################

      - uses: Interstellar-Network/gh-actions/install-sgx-sdk@v3-dev

      # NOTE: we CAN NOT run "cargo test --release" without "make"
      # ELSE: "error: could not find native static library `Enclave_u`, perhaps an -L flag is missing?"
      - name: Make and Test
        run: |
          make
          cd bin/ && touch spid.txt key.txt && ./integritee-service test --all
          cargo test --release

  ##########################################################################
  ##########################################################################
  cargo_lint:
    runs-on: ubuntu-latest

    steps:
      - uses: Interstellar-Network/gh-actions/prepare@v3-dev
        with:
          ssh_key_input: ${{ secrets.SSH_KEY_MACHINE_USER_INTERSTELLAR_CI }}
          install_cmake_and_ninja: false
          install_ccache: true
          install_conan: false

      - uses: Interstellar-Network/gh-actions/prepare_rust@v3-dev
        with:
          use_toolchain_toml: "true"
          toolchain_components: "rustfmt,clippy"

      ##########################################################################

      - uses: Interstellar-Network/gh-actions/install-sgx-sdk@v3-dev

      # TODO? do we need to "cd enclave/"[we can probably consider enclave/ as internal implementation details?]
      - uses: Interstellar-Network/gh-actions/rust-lint@v3-dev
        with:
          # - clippy: pass --release b/c make always compile in release; so might as well avoid recompiling
          #   from scratch just for the linters.
          # - need to disable unknown-lints b/c the workspace toolchain is old; and clippy does not understand
          #   "#[allow(clippy::derive_partial_eq_without_eq)]" in interstellar-pallets/pallets/ocw-circuits/src/lib.rs
          #   And that is used both in this repo, and integritee-node which is using a more recent toolchain.
          clippy_args: "--release -- -D warnings -A unknown-lints"
      # TODO pass "-A unknown-lints" to clippy
