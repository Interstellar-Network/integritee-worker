[package]
name = "enclave-runtime"
version = "0.9.0"
authors = ["Integritee AG <hello@integritee.network>"]
edition = "2021"

[workspace]
members = []

[lib]
name = "enclave_runtime"
crate-type = ["staticlib"]

[features]
default = []
evm = [
    "ita-sgx-runtime/evm",
    "ita-stf/evm",
]
production = ["itp-settings/production", "itp-attestation-handler/production"]
sidechain = ["itp-settings/sidechain", "itp-top-pool-author/sidechain"]
offchain-worker = [
    "itp-settings/offchain-worker",
    "itp-top-pool-author/offchain-worker",
]
teeracle = [
    "ita-oracle",
    "itp-settings/teeracle",
    "itp-top-pool-author/teeracle",
]
test = [
    "ita-stf/test",
    "itc-parentchain/test",
    "itp-attestation-handler/test",
    "itp-extrinsics-factory/mocks",
    "itp-sgx-crypto/test",
    "itp-sgx-temp-dir",
    "itp-stf-executor/test",
    "itp-stf-executor/mocks",
    "itp-stf-state-handler/test",
    "itp-stf-state-observer/mocks",
    "itp-storage/test",
    "itp-test/sgx",
    "itp-top-pool-author/test",
    "itp-top-pool-author/mocks",
    # substrate
    "frame-system",
]

[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx-crypto-helper = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", package = "sgx_tcrypto_helper" }
sgx_rand = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_serialize = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_serialize_derive = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tcrypto = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_trts = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tse = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tseal = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tstd = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", features = ["untrusted_fs", "net", "backtrace"] }
sgx_tunittest = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_types = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }

[dependencies]
array-bytes = { version = "6.0.0" }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
derive_more = { version = "0.99.5" }
hex = { version = "0.4.3", default-features = false, features = ["alloc"] }
ipfs-unixfs = { default-features = false, git = "https://github.com/whalelephant/rust-ipfs", branch = "w-nstd" }
lazy_static = { version = "1.1.0", features = ["spin_no_std"] }
primitive-types = { version = "0.12.1", default-features = false, features = ["codec", "serde_no_std"] }

# scs / integritee
jsonrpc-core = { default-features = false, git = "https://github.com/scs/jsonrpc", branch = "no_std_v18" }

# mesalock
env_logger = { git = "https://github.com/integritee-network/env_logger-sgx" }
log = { git = "https://github.com/integritee-network/log-sgx" }
# Todo #1313: use the `once_cell` included in rusts core library once we use rust v1.70.0
once_cell = { git = "https://github.com/mesalock-linux/once_cell-sgx" }
rustls = { rev = "sgx_1.1.3", features = ["dangerous_configuration"], git = "https://github.com/mesalock-linux/rustls" }
serde = { tag = "sgx_1.1.3", git = "https://github.com/mesalock-linux/serde-sgx", features = ["alloc", "mesalock_sgx"] }
serde_derive = { git = "https://github.com/mesalock-linux/serde-sgx" }
serde_json = { tag = "sgx_1.1.3", git = "https://github.com/mesalock-linux/serde-json-sgx" }
webpki = { git = "https://github.com/mesalock-linux/webpki", branch = "mesalock_sgx" }

# for attestation
base58 = { rev = "sgx_1.1.3", package = "rust-base58", default-features = false, features = ["mesalock_sgx"], git = "https://github.com/mesalock-linux/rust-base58-sgx" }

cid = { default-features = false, git = "https://github.com/whalelephant/rust-cid", branch = "nstd" }
multibase = { default-features = false, git = "https://github.com/whalelephant/rust-multibase", branch = "nstd" }

# local deps
# interstellar: MUST set feature "sgx" else imageproc will FAIL to compile(deps of lib-garble-rs)
# with
#   Compiling ab_glyph_rasterizer v0.1.8
#   error: You need to activate either the `std` or `libm` feature.
#   -   -> /home/xxx/.cargo/registry/src/github.com-1ecc6299db9ec823/ab_glyph_rasterizer-0.1.8/src/lib.rs:30:1   |
#   30 | compile_error!("You need to activate either the `std` or `libm` feature.");
ita-oracle = { path = "../app-libs/oracle", default-features = false, optional = true, features = ["sgx"] }
ita-sgx-runtime = { path = "../app-libs/sgx-runtime", default-features = false, features = ["sgx"] }
ita-stf = { path = "../app-libs/stf", default-features = false, features = ["sgx"] }
itc-direct-rpc-server = { path = "../core/direct-rpc-server", default-features = false, features = ["sgx"] }
itc-offchain-worker-executor = { path = "../core/offchain-worker-executor", default-features = false, features = ["sgx"] }
itc-parentchain = { path = "../core/parentchain/parentchain-crate", default-features = false, features = ["sgx"] }
itc-parentchain-test = { path = "../core/parentchain/test", default-features = false }
itc-tls-websocket-server = { path = "../core/tls-websocket-server", default-features = false, features = ["sgx"] }
itp-attestation-handler = { path = "../core-primitives/attestation-handler", default-features = false, features = ["sgx"] }
itp-component-container = { path = "../core-primitives/component-container", default-features = false, features = ["sgx"] }
itp-extrinsics-factory = { path = "../core-primitives/extrinsics-factory", default-features = false, features = ["sgx"] }
itp-hashing = { path = "../core-primitives/hashing", default-features = false }
itp-import-queue = { path = "../core-primitives/import-queue", default-features = false, features = ["sgx"] }
itp-node-api = { path = "../core-primitives/node-api", default-features = false, features = ["sgx"] }
itp-node-api-metadata = { path = "../core-primitives/node-api/metadata", default-features = false }
itp-nonce-cache = { path = "../core-primitives/nonce-cache", default-features = false, features = ["sgx"] }
itp-ocall-api = { path = "../core-primitives/ocall-api", default-features = false }
itp-primitives-cache = { path = "../core-primitives/primitives-cache", default-features = false, features = ["sgx"] }
itp-rpc = { path = "../core-primitives/rpc", default-features = false, features = ["sgx"] }
itp-settings = { path = "../core-primitives/settings" }
itp-sgx-crypto = { path = "../core-primitives/sgx/crypto", default-features = false, features = ["sgx"] }
itp-sgx-externalities = { path = "../core-primitives/substrate-sgx/externalities", default-features = false, features = ["sgx"] }
itp-sgx-io = { path = "../core-primitives/sgx/io", default-features = false, features = ["sgx"] }
itp-stf-executor = { path = "../core-primitives/stf-executor", default-features = false, features = ["sgx"] }
itp-stf-interface = { path = "../core-primitives/stf-interface", default-features = false }
itp-stf-primitives = { path = "../core-primitives/stf-primitives", default-features = false }
itp-stf-state-handler = { path = "../core-primitives/stf-state-handler", default-features = false, features = ["sgx"] }
itp-stf-state-observer = { path = "../core-primitives/stf-state-observer", default-features = false, features = ["sgx"] }
itp-storage = { path = "../core-primitives/storage", default-features = false, features = ["sgx"] }
itp-teerex-storage = { path = "../core-primitives/teerex-storage", default-features = false }
itp-test = { path = "../core-primitives/test", default-features = false, optional = true }
itp-time-utils = { path = "../core-primitives/time-utils", default-features = false, features = ["sgx"] }
itp-top-pool = { path = "../core-primitives/top-pool", default-features = false, features = ["sgx"] }
itp-top-pool-author = { path = "../core-primitives/top-pool-author", default-features = false, features = ["sgx"] }
itp-types = { path = "../core-primitives/types", default-features = false }
itp-utils = { path = "../core-primitives/utils", default-features = false, features = ["sgx"] }
its-block-verification = { path = "../sidechain/block-verification", default-features = false }
its-primitives = { path = "../sidechain/primitives", default-features = false }
its-sidechain = { path = "../sidechain/sidechain-crate", default-features = false, features = ["sgx"] }

# substrate deps
frame-support = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }
frame-system = { optional = true, default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }
sp-core = { default-features = false, features = ["full_crypto"], git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }
sp-runtime = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }
sp-std = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }

# test-deps
itp-sgx-temp-dir = { version = "0.1", default-features = false, optional = true, path = "../core-primitives/sgx/temp-dir" }

[patch.crates-io]
getrandom = { git = "https://github.com/integritee-network/getrandom-sgx", branch = "update-v2.3" }
# WARNING! error: duplicate lang item in crate `sgx_tstd` (which `log` depends on): `f32_runtime`
# FIX: make sure ALL dependencies use "log-sgx"+"env_logger-sgx" when compiling for the enclave(ie features "sgx")
# DO NOT remove those: it would compile but nothing would be logged!
log = { git = "https://github.com/integritee-network/log-sgx" }
env_logger = { git = "https://github.com/integritee-network/env_logger-sgx" }

[patch."https://github.com/mesalock-linux/log-sgx"]
log = { git = "https://github.com/integritee-network/log-sgx" }

[patch."https://github.com/paritytech/substrate"]
sp-io = { path = "../core-primitives/substrate-sgx/sp-io" }

#[patch."https://github.com/integritee-network/frontier"]
#pallet-evm = { path = "../../frontier/frame/evm"}

[patch."https://github.com/apache/teaclave-sgx-sdk.git"]
sgx_alloc = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_crypto_helper = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_libc = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_rand = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_serialize = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_serialize_derive = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_serialize_derive_internals = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tcrypto = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tcrypto_helper = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_trts = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tse = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tseal = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tstd = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tunittest = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_types = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }

#[patch."https://github.com/scs/substrate-api-client"]
#substrate-api-client = { path = "../../../scs/substrate-api-client" }

#[patch."https://github.com/integritee-network/pallets.git"]
#pallet-parentchain = { path = "../../pallets/parentchain" }
#itp-types = {  path = "../../pallets/primitives/types" }
#itp-utils = {  path = "../../pallets/primitives/utils" }

#[patch."https://github.com/integritee-network/http_req"]
#http_req-sgx = {  package = "http_req", path = '../../http_req' }

# TEMP https://github.com/integritee-network/worker/issues/1388
# FIX/WORKAROUND for "the package `itc-rpc-client` depends on `frame-metadata`, with features: `v14` but `frame-metadata` does not have these features"
[patch."https://github.com/paritytech/frame-metadata.git"]
frame-metadata = { version = "=15.1.0" }

################################################################################
# CAREFUL/WARNING: the patches below SHOULD match the one in the root Cargo.toml

# [patch."https://github.com/Interstellar-Network/lib-garble-rs.git"]
# lib-garble-rs = { path = "../../lib-garble-rs/lib-garble-rs/" }

# [patch."https://github.com/Interstellar-Network/integritee-node.git"]
# integritee-node-runtime = { path = "../../integritee-node/runtime/" }

# [patch."https://github.com/Interstellar-Network/pallets.git"]
# circuits-storage-common = { path = "../../pallets/circuits-storage-common/" }
# pallet-mobile-registry = { path = "../../pallets/pallets/mobile-registry/" }
# pallet-ocw-circuits = { path = "../../pallets/pallets/ocw-circuits/" }
# pallet-ocw-garble = { path = "../../pallets/pallets/ocw-garble/" }
# pallet-tx-registry = { path = "../../pallets/pallets/tx-registry/" }
# pallet-tx-validation = { path = "../../pallets/pallets/tx-validation/" }

# [patch."https://github.com/Interstellar-Network/rs-common.git"]
# interstellar-http-client = { path = "../../rs-common/http-client/" }
# interstellar-ipfs-client = { path = "../../rs-common/ipfs-client-http-req/" }
################################################################################
